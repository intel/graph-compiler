name: Graph Compiler build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions: read-all

jobs:
  build:
    name: Build
    runs-on: [self-hosted]

    env:
      GH_TOKEN: ${{ github.token }}    
      GLIBC_TUNABLES: "glibc.cpu.x86_shstk=permissive"

    steps:
      - uses: actions/checkout@v4

      - name: Set LLVM hash
        run: |
          echo LLVM_HASH=$(cat cmake/llvm-version.txt) >>$GITHUB_ENV

      - name: Fetch requirements for python binding
        uses: actions/checkout@v4
        with:
          repository: llvm/llvm-project
          ref: ${{ env.LLVM_HASH }}
          sparse-checkout: mlir/python/requirements.txt
          sparse-checkout-cone-mode: false
          path: llvm-dep

      - name: Install requirements
        run: python3 -m pip install -r llvm-dep/mlir/python/requirements.txt

      - name: Build
        run: |
          scripts/compile.sh

      - name: Test
        run: |
          cmake --build build --target gc-check
      

      - name: Build and install benchgc
        working-directory: build
        run: |
          touch python_packages/gc_mlir_core/gc_mlir/extras/__init__.py
          ninja benchgc
          pip uninstall -y benchgc || true
          pip install test/benchgc/dist/benchgc-*.whl

      - name: Correctness Test
        env:
          MLIR_RUNNER_UTILS: ../install/llvm/lib/libmlir_runner_utils.so
          MLIR_C_RUNNER_UTILS: ../install/llvm/lib/libmlir_c_runner_utils.so
          LD_PRELOAD: /lib/x86_64-linux-gnu/libomp5.so
        run: |
          scripts/correctness.sh
